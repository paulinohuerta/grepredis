#!/usr/bin/awk -f

BEGIN {
  sock="/inet/tcp/0/localhost/6379"
  #db=SELECT(sock,0)  #uncomment for select database, second argument
  if(!db)
    print "Selecting default database..." 
  KEYS(sock,"*")
  for (key in K) {
    TYPE(sock,key)
  }
  for (key in K) {
    if(K[key]=="list"){
      count=obtain(sock,key,"LLEN") 
      if (count > 0) {
        LRANGE(sock,key,count)
        for (i in L) 
          if(L[i] ~ ARGV[1])
	    printf("%s %s\n%s:%s\n","List ",key,i,L[i])
      }
    }
    if(K[key]=="hash"){
       HGETALL(sock,key)
       for(k in H) {
         if(H[k] ~ ARGV[1])
           printf("%s %s\n%s:%s\n","Hash ",key,k,H[k])
       }
    }
  }
  close(sock)
}

function SELECT(c,n){
  RS = ORS = "\r\n"
  print "SELECT",n |& c
  c |& getline
  db=substr($0,2)
  return db=="OK"
}

function LRANGE(c,k,r, count,t,n){
  RS = ORS = "\r\n"
  print "LRANGE",k, "-"r, r |& c
  c |& getline
  count=substr($0,2)
  count=count*2
  delete L
  n=1
  while (count--){
    c |& getline
    if((count%2)==0) {
      T=$0
      while((length(T)) < (t+0)) {
        T=T"\r\n"
        c |& getline
        T=T""$0
      }
      L[n++]=T
      T=""
    }
    else {
      t=substr($0,2)
    }
  }
}

function TYPE(c,key){
  RS = ORS = "\r\n"
  print "TYPE",key |& c 
  c |& getline
  K[key]=substr($0,2)
}

function HGETALL(c,key, count){
  count=obtain(c,key,"HGETALL")
  count=count*2
  hash(c,count)
}

function obtain(c,key,cdo, count){
  RS = ORS = "\r\n"
  print cdo,key  |& c
  c |& getline
  count=$0
  count=substr($0,2)
  return count
}

function KEYS(c,k, count){
  count=obtain(c,k,"KEYS")*2
  while (count--){
    c |& getline
    if((cont%2)==0) 
      K[$0]
  }
}

function hash(c,count, prev,T,t){
  delete H
  while (count--){
   c |& getline
   if((count%2)==0) {
      T=$0
      while((length(T)) < (t+0)) {
        T=T"\r\n"
        c |& getline
        T=T""$0
      }
      if(!prev)
       prev=T
      else {
       H[prev]=T
       prev=0
      }
      T=""
   }
   else {
     t=substr($0,2)
   }
  }
}
